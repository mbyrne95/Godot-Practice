[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://6opn2jo0vkd4"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_e1y51"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_yjuv3"]
parameter_name = "tint"
default_value_enabled = true
default_value = Color(1, 0, 0, 0.498039)

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_jsqdr"]
parameter_name = "enabled"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_pe1nr"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f1duu"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_u10id"]
operator = 2

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_s8oyp"]
parameter_name = "white"
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nivuv"]
parameter_name = "white_color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ueye8"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform int white = 0;
uniform bool enabled = false;
uniform vec4 white_color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform vec4 tint : source_color = vec4(1.000000, 0.000000, 0.000000, 0.498039);



void fragment() {
// IntParameter:7
	int n_out7p0 = white;


// BooleanParameter:3
	bool n_out3p0 = enabled;


// ColorParameter:8
	vec4 n_out8p0 = white_color;


// Input:5
	vec4 n_out5p0 = COLOR;


	vec3 n_out9p0;
// If:9
	float n_in9p1 = 1.00000;
	float n_in9p2 = 0.00001;
	if(abs((n_out3p0 ? 1.0 : 0.0) - n_in9p1) < n_in9p2)
	{
		n_out9p0 = vec3(n_out8p0.xyz);
	}
	else if((n_out3p0 ? 1.0 : 0.0) < n_in9p1)
	{
		n_out9p0 = vec3(n_out5p0.xyz);
	}
	else
	{
		n_out9p0 = vec3(n_out5p0.xyz);
	}


// ColorParameter:2
	vec4 n_out2p0 = tint;


// ColorOp:6
	vec3 n_out6p0 = min(vec3(n_out2p0.xyz), vec3(n_out5p0.xyz));


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 1.00000;
	float n_in4p2 = 0.00001;
	if(abs((n_out3p0 ? 1.0 : 0.0) - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_out6p0;
	}
	else if((n_out3p0 ? 1.0 : 0.0) < n_in4p1)
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}


	vec3 n_out10p0;
// If:10
	float n_in10p1 = 1.00000;
	float n_in10p2 = 0.00001;
	if(abs(float(n_out7p0) - n_in10p1) < n_in10p2)
	{
		n_out10p0 = n_out9p0;
	}
	else if(float(n_out7p0) < n_in10p1)
	{
		n_out10p0 = n_out4p0;
	}
	else
	{
		n_out10p0 = n_out4p0;
	}


// Output:0
	COLOR.rgb = n_out10p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(920, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_yjuv3")
nodes/fragment/2/position = Vector2(-380, 40)
nodes/fragment/3/node = SubResource("VisualShaderNodeBooleanParameter_jsqdr")
nodes/fragment/3/position = Vector2(-100, -120)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_pe1nr")
nodes/fragment/4/position = Vector2(480, -20)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_f1duu")
nodes/fragment/5/position = Vector2(-380, 320)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorOp_u10id")
nodes/fragment/6/position = Vector2(-80, 100)
nodes/fragment/7/node = SubResource("VisualShaderNodeIntParameter_s8oyp")
nodes/fragment/7/position = Vector2(460, -200)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorParameter_nivuv")
nodes/fragment/8/position = Vector2(-360, 660)
nodes/fragment/9/node = SubResource("VisualShaderNodeIf_ueye8")
nodes/fragment/9/position = Vector2(480, 340)
nodes/fragment/10/node = SubResource("VisualShaderNodeIf_e1y51")
nodes/fragment/10/position = Vector2(740, 100)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 4, 5, 0, 4, 5, 2, 0, 6, 0, 5, 0, 6, 1, 6, 0, 4, 3, 8, 0, 9, 3, 5, 0, 9, 4, 5, 0, 9, 5, 9, 0, 10, 3, 3, 0, 9, 0, 4, 0, 10, 5, 4, 0, 10, 4, 7, 0, 10, 0, 10, 0, 0, 0)
